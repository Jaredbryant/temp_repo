{"ast":null,"code":"var _jsxFileName = \"/Users/jaredbryant/classroom-calendar/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useGoogleLogin } from \"@react-oauth/google\";\nimport axios from \"axios\";\nimport ClassroomCalendar from \"./ClassroomCalendar\";\nimport ProgressBar from \"./ProgressBar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [overdueCount, setOverdueCount] = useState(0); // Count overdue assignments\n  const [completedCount, setCompletedCount] = useState(0); // Count completed assignments\n\n  // Fetch Classroom Data (Courses and Assignments)\n  const fetchClassroomData = async token => {\n    try {\n      console.log(\"Fetching classroom data with token:\", token);\n\n      // Fetch courses\n      const coursesResponse = await axios.get(\"https://classroom.googleapis.com/v1/courses\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Fetched Courses Response:\", coursesResponse.data);\n      const courses = coursesResponse.data.courses || [];\n      if (courses.length === 0) {\n        console.warn(\"No courses found for the logged-in account.\");\n        setEvents([]);\n        setOverdueCount(0);\n        setCompletedCount(0);\n        return;\n      }\n\n      // Fetch coursework for each course\n      const allEvents = [];\n      let overdue = 0;\n      let completed = 0;\n      for (const course of courses) {\n        try {\n          const courseworkResponse = await axios.get(`https://classroom.googleapis.com/v1/courses/${course.id}/courseWork`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          console.log(`Course ID: ${course.id}, Assignments:`, courseworkResponse.data);\n          const coursework = courseworkResponse.data.courseWork || [];\n          coursework.forEach(assignment => {\n            const now = new Date();\n            const {\n              dueDate,\n              dueTime\n            } = assignment;\n            const title = assignment.title;\n            if (dueDate) {\n              const dueDateTime = new Date(dueDate.year, dueDate.month - 1, dueDate.day, (dueTime === null || dueTime === void 0 ? void 0 : dueTime.hours) || 23, (dueTime === null || dueTime === void 0 ? void 0 : dueTime.minutes) || 59);\n\n              // Add overdue and completed logic\n              if (dueDateTime < now) {\n                overdue++;\n                allEvents.push({\n                  title: `Overdue: ${title}`,\n                  start: dueDateTime,\n                  end: dueDateTime,\n                  color: \"red\" // Overdue assignments are red\n                });\n              } else {\n                allEvents.push({\n                  title,\n                  start: dueDateTime,\n                  end: dueDateTime,\n                  color: \"blue\" // On-time assignments are blue\n                });\n              }\n            } else {\n              allEvents.push({\n                title: `${title} (No Due Date)`,\n                start: null,\n                end: null,\n                color: \"gray\" // Assignments without a due date are gray\n              });\n            }\n          });\n        } catch (error) {\n          console.error(`Error fetching coursework for course ID: ${course.id}`, error);\n        }\n      }\n\n      // Update state with fetched data\n      setEvents(allEvents);\n      setOverdueCount(overdue);\n      setCompletedCount(allEvents.length - overdue);\n      console.log(\"Final Events:\", allEvents);\n    } catch (error) {\n      console.error(\"Error fetching classroom data:\", error.response || error);\n    }\n  };\n\n  // Google Login\n  const login = useGoogleLogin({\n    onSuccess: async tokenResponse => {\n      console.log(\"Login Successful:\", tokenResponse);\n      const token = tokenResponse.access_token;\n      fetchClassroomData(token);\n    },\n    onError: error => console.error(\"Login failed:\", error),\n    scope: \"https://www.googleapis.com/auth/classroom.courses.readonly https://www.googleapis.com/auth/classroom.coursework.me.readonly\"\n  });\n\n  // Logout (Clear State)\n  const logout = () => {\n    console.log(\"Logging out...\");\n    window.location.reload(); // Reload the app to clear token and state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Classroom Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), !events.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => login(),\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No events to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        completedCount: completedCount,\n        overdueCount: overdueCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Overdue Assignments: \", overdueCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ClassroomCalendar, {\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"e2z7rY3dmh7YR8zs6pQSwBQv2rk=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useGoogleLogin","axios","ClassroomCalendar","ProgressBar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","events","setEvents","overdueCount","setOverdueCount","completedCount","setCompletedCount","fetchClassroomData","token","console","log","coursesResponse","get","headers","Authorization","data","courses","length","warn","allEvents","overdue","completed","course","courseworkResponse","id","coursework","courseWork","forEach","assignment","now","Date","dueDate","dueTime","title","dueDateTime","year","month","day","hours","minutes","push","start","end","color","error","response","login","onSuccess","tokenResponse","access_token","onError","scope","logout","window","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jaredbryant/classroom-calendar/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useGoogleLogin } from \"@react-oauth/google\";\nimport axios from \"axios\";\nimport ClassroomCalendar from \"./ClassroomCalendar\";\nimport ProgressBar from \"./ProgressBar\";\n\nconst App = () => {\n  const [events, setEvents] = useState([]);\n  const [overdueCount, setOverdueCount] = useState(0); // Count overdue assignments\n  const [completedCount, setCompletedCount] = useState(0); // Count completed assignments\n\n  // Fetch Classroom Data (Courses and Assignments)\n  const fetchClassroomData = async (token) => {\n    try {\n      console.log(\"Fetching classroom data with token:\", token);\n\n      // Fetch courses\n      const coursesResponse = await axios.get(\n        \"https://classroom.googleapis.com/v1/courses\",\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(\"Fetched Courses Response:\", coursesResponse.data);\n\n      const courses = coursesResponse.data.courses || [];\n      if (courses.length === 0) {\n        console.warn(\"No courses found for the logged-in account.\");\n        setEvents([]);\n        setOverdueCount(0);\n        setCompletedCount(0);\n        return;\n      }\n\n      // Fetch coursework for each course\n      const allEvents = [];\n      let overdue = 0;\n      let completed = 0;\n\n      for (const course of courses) {\n        try {\n          const courseworkResponse = await axios.get(\n            `https://classroom.googleapis.com/v1/courses/${course.id}/courseWork`,\n            {\n              headers: { Authorization: `Bearer ${token}` },\n            }\n          );\n          console.log(\n            `Course ID: ${course.id}, Assignments:`,\n            courseworkResponse.data\n          );\n\n          const coursework = courseworkResponse.data.courseWork || [];\n          coursework.forEach((assignment) => {\n            const now = new Date();\n            const { dueDate, dueTime } = assignment;\n            const title = assignment.title;\n\n            if (dueDate) {\n              const dueDateTime = new Date(\n                dueDate.year,\n                dueDate.month - 1,\n                dueDate.day,\n                dueTime?.hours || 23,\n                dueTime?.minutes || 59\n              );\n\n              // Add overdue and completed logic\n              if (dueDateTime < now) {\n                overdue++;\n                allEvents.push({\n                  title: `Overdue: ${title}`,\n                  start: dueDateTime,\n                  end: dueDateTime,\n                  color: \"red\", // Overdue assignments are red\n                });\n              } else {\n                allEvents.push({\n                  title,\n                  start: dueDateTime,\n                  end: dueDateTime,\n                  color: \"blue\", // On-time assignments are blue\n                });\n              }\n            } else {\n              allEvents.push({\n                title: `${title} (No Due Date)`,\n                start: null,\n                end: null,\n                color: \"gray\", // Assignments without a due date are gray\n              });\n            }\n          });\n        } catch (error) {\n          console.error(`Error fetching coursework for course ID: ${course.id}`, error);\n        }\n      }\n\n      // Update state with fetched data\n      setEvents(allEvents);\n      setOverdueCount(overdue);\n      setCompletedCount(allEvents.length - overdue);\n      console.log(\"Final Events:\", allEvents);\n    } catch (error) {\n      console.error(\"Error fetching classroom data:\", error.response || error);\n    }\n  };\n\n  // Google Login\n  const login = useGoogleLogin({\n    onSuccess: async (tokenResponse) => {\n      console.log(\"Login Successful:\", tokenResponse);\n      const token = tokenResponse.access_token;\n\n      fetchClassroomData(token);\n    },\n    onError: (error) => console.error(\"Login failed:\", error),\n    scope: \"https://www.googleapis.com/auth/classroom.courses.readonly https://www.googleapis.com/auth/classroom.coursework.me.readonly\",\n  });\n\n  // Logout (Clear State)\n  const logout = () => {\n    console.log(\"Logging out...\");\n    window.location.reload(); // Reload the app to clear token and state\n  };\n\n  return (\n    <div>\n      <h1>Classroom Calendar</h1>\n      {!events.length ? (\n        <>\n          <button onClick={() => login()}>Login with Google</button>\n          <p>No events to display</p>\n        </>\n      ) : (\n        <>\n          <button onClick={logout}>Logout</button>\n          <h2>Your Assignments</h2>\n          <ProgressBar completedCount={completedCount} overdueCount={overdueCount} />\n          <h3>Overdue Assignments: {overdueCount}</h3>\n          <ClassroomCalendar events={events} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}