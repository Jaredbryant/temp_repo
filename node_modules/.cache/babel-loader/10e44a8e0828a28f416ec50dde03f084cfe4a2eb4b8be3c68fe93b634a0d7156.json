{"ast":null,"code":"var _jsxFileName = \"/Users/mannyfowler/Desktop/Hackathon/HackerHornets/CLASSROOM-CALENDAR/src/StudyMaterial.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudyMaterial = ({\n  gradesArray\n}) => {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    const fetchStudyMaterials = async () => {\n      try {\n        // Filter gradesArray\n        const filteredGrades = gradesArray.filter(item => !item.includes(\"not graded\"));\n\n        // Generate prompts for OpenAI API\n        const prompt = `Provide study material suggestions for the following topics: ${filteredGrades.join(\", \")}.`;\n\n        // Fetch study material from OpenAI\n        const openAIResponse = await axios.post(\"https://api.openai.com/v1/completions\", {\n          model: \"text-davinci-003\",\n          // Use your desired model\n          prompt: prompt,\n          max_tokens: 150\n        }, {\n          headers: {\n            Authorization: `Bearer YOUR_OPENAI_API_KEY`\n          }\n        });\n        const studySuggestions = openAIResponse.data.choices[0].text.trim();\n        setSuggestions(studySuggestions.split(\"\\n\"));\n\n        // Fetch YouTube videos for the suggestions\n        const videoSearchTerms = studySuggestions.split(\"\\n\").slice(0, 3); // Limit to top 3 suggestions\n        const videoResults = [];\n        for (const term of videoSearchTerms) {\n          const youtubeResponse = await axios.get(\"https://www.googleapis.com/youtube/v3/search\", {\n            params: {\n              part: \"snippet\",\n              q: term,\n              type: \"video\",\n              maxResults: 2,\n              key: \"YOUR_YOUTUBE_API_KEY\"\n            }\n          });\n          videoResults.push(...youtubeResponse.data.items);\n        }\n        setVideos(videoResults);\n      } catch (error) {\n        console.error(\"Error fetching study materials or videos:\", error);\n      }\n    };\n    fetchStudyMaterials();\n  }, [gradesArray]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Study Material Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: suggestion\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"YouTube Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: `https://www.youtube.com/embed/${video.id.videoId}`,\n          frameBorder: \"0\",\n          allowFullScreen: true,\n          title: video.snippet.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, video.id.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(StudyMaterial, \"lJb3aLJFK2xw2ArD94VuRD+skcI=\");\n_c = StudyMaterial;\nexport default StudyMaterial;\nvar _c;\n$RefreshReg$(_c, \"StudyMaterial\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StudyMaterial","gradesArray","_s","suggestions","setSuggestions","videos","setVideos","fetchStudyMaterials","filteredGrades","filter","item","includes","prompt","join","openAIResponse","post","model","max_tokens","headers","Authorization","studySuggestions","data","choices","text","trim","split","videoSearchTerms","slice","videoResults","term","youtubeResponse","get","params","part","q","type","maxResults","key","push","items","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","suggestion","index","video","snippet","title","src","id","videoId","frameBorder","allowFullScreen","_c","$RefreshReg$"],"sources":["/Users/mannyfowler/Desktop/Hackathon/HackerHornets/CLASSROOM-CALENDAR/src/StudyMaterial.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst StudyMaterial = ({ gradesArray }) => {\n  const [suggestions, setSuggestions] = useState([]);\n  const [videos, setVideos] = useState([]);\n\n  useEffect(() => {\n    const fetchStudyMaterials = async () => {\n      try {\n        // Filter gradesArray\n        const filteredGrades = gradesArray.filter(\n          (item) => !item.includes(\"not graded\")\n        );\n\n        // Generate prompts for OpenAI API\n        const prompt = `Provide study material suggestions for the following topics: ${filteredGrades.join(\n          \", \"\n        )}.`;\n\n        // Fetch study material from OpenAI\n        const openAIResponse = await axios.post(\n          \"https://api.openai.com/v1/completions\",\n          {\n            model: \"text-davinci-003\", // Use your desired model\n            prompt: prompt,\n            max_tokens: 150,\n          },\n          {\n            headers: {\n              Authorization: `Bearer YOUR_OPENAI_API_KEY`,\n            },\n          }\n        );\n\n        const studySuggestions = openAIResponse.data.choices[0].text.trim();\n        setSuggestions(studySuggestions.split(\"\\n\"));\n\n        // Fetch YouTube videos for the suggestions\n        const videoSearchTerms = studySuggestions.split(\"\\n\").slice(0, 3); // Limit to top 3 suggestions\n        const videoResults = [];\n\n        for (const term of videoSearchTerms) {\n          const youtubeResponse = await axios.get(\n            \"https://www.googleapis.com/youtube/v3/search\",\n            {\n              params: {\n                part: \"snippet\",\n                q: term,\n                type: \"video\",\n                maxResults: 2,\n                key: \"YOUR_YOUTUBE_API_KEY\",\n              },\n            }\n          );\n\n          videoResults.push(...youtubeResponse.data.items);\n        }\n\n        setVideos(videoResults);\n      } catch (error) {\n        console.error(\"Error fetching study materials or videos:\", error);\n      }\n    };\n\n    fetchStudyMaterials();\n  }, [gradesArray]);\n\n  return (\n    <div>\n      <h2>Study Material Suggestions</h2>\n      <ul>\n        {suggestions.map((suggestion, index) => (\n          <li key={index}>{suggestion}</li>\n        ))}\n      </ul>\n      <h2>YouTube Videos</h2>\n      <div>\n        {videos.map((video) => (\n          <div key={video.id.videoId}>\n            <h3>{video.snippet.title}</h3>\n            <iframe\n              src={`https://www.youtube.com/embed/${video.id.videoId}`}\n              frameBorder=\"0\"\n              allowFullScreen\n              title={video.snippet.title}\n            ></iframe>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default StudyMaterial;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF;QACA,MAAMC,cAAc,GAAGP,WAAW,CAACQ,MAAM,CACtCC,IAAI,IAAK,CAACA,IAAI,CAACC,QAAQ,CAAC,YAAY,CACvC,CAAC;;QAED;QACA,MAAMC,MAAM,GAAG,gEAAgEJ,cAAc,CAACK,IAAI,CAChG,IACF,CAAC,GAAG;;QAEJ;QACA,MAAMC,cAAc,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CACrC,uCAAuC,EACvC;UACEC,KAAK,EAAE,kBAAkB;UAAE;UAC3BJ,MAAM,EAAEA,MAAM;UACdK,UAAU,EAAE;QACd,CAAC,EACD;UACEC,OAAO,EAAE;YACPC,aAAa,EAAE;UACjB;QACF,CACF,CAAC;QAED,MAAMC,gBAAgB,GAAGN,cAAc,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC;QACnEpB,cAAc,CAACgB,gBAAgB,CAACK,KAAK,CAAC,IAAI,CAAC,CAAC;;QAE5C;QACA,MAAMC,gBAAgB,GAAGN,gBAAgB,CAACK,KAAK,CAAC,IAAI,CAAC,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACnE,MAAMC,YAAY,GAAG,EAAE;QAEvB,KAAK,MAAMC,IAAI,IAAIH,gBAAgB,EAAE;UACnC,MAAMI,eAAe,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CACrC,8CAA8C,EAC9C;YACEC,MAAM,EAAE;cACNC,IAAI,EAAE,SAAS;cACfC,CAAC,EAAEL,IAAI;cACPM,IAAI,EAAE,OAAO;cACbC,UAAU,EAAE,CAAC;cACbC,GAAG,EAAE;YACP;UACF,CACF,CAAC;UAEDT,YAAY,CAACU,IAAI,CAAC,GAAGR,eAAe,CAACT,IAAI,CAACkB,KAAK,CAAC;QAClD;QAEAjC,SAAS,CAACsB,YAAY,CAAC;MACzB,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;IAEDjC,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACN,WAAW,CAAC,CAAC;EAEjB,oBACEF,OAAA;IAAA2C,QAAA,gBACE3C,OAAA;MAAA2C,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC/C,OAAA;MAAA2C,QAAA,EACGvC,WAAW,CAAC4C,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACjClD,OAAA;QAAA2C,QAAA,EAAiBM;MAAU,GAAlBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACL/C,OAAA;MAAA2C,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB/C,OAAA;MAAA2C,QAAA,EACGrC,MAAM,CAAC0C,GAAG,CAAEG,KAAK,iBAChBnD,OAAA;QAAA2C,QAAA,gBACE3C,OAAA;UAAA2C,QAAA,EAAKQ,KAAK,CAACC,OAAO,CAACC;QAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9B/C,OAAA;UACEsD,GAAG,EAAE,iCAAiCH,KAAK,CAACI,EAAE,CAACC,OAAO,EAAG;UACzDC,WAAW,EAAC,GAAG;UACfC,eAAe;UACfL,KAAK,EAAEF,KAAK,CAACC,OAAO,CAACC;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAAA,GAPFI,KAAK,CAACI,EAAE,CAACC,OAAO;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQrB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5C,EAAA,CAzFIF,aAAa;AAAA0D,EAAA,GAAb1D,aAAa;AA2FnB,eAAeA,aAAa;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}