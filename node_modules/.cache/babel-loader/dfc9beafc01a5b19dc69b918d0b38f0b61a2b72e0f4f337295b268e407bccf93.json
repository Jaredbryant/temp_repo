{"ast":null,"code":"var _jsxFileName = \"/Users/jaredbryant/classroom-calendar/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useGoogleLogin } from \"@react-oauth/google\";\nimport axios from \"axios\";\nimport ClassroomCalendar from \"./ClassroomCalendar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [token, setToken] = useState(null); // OAuth token\n  const [events, setEvents] = useState([]);\n  const [gradesArray, setGradesArray] = useState([]); // 2D array of assignments and grades\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (token) {\n      fetchClassroomData(token);\n    }\n  }, [token]);\n\n  // Fetch Classroom Data\n  const fetchClassroomData = async token => {\n    setIsLoading(true);\n    try {\n      console.log(\"Fetching classroom data with token:\", token);\n\n      // Fetch courses\n      const coursesResponse = await axios.get(\"https://classroom.googleapis.com/v1/courses\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Fetched Courses:\", coursesResponse.data);\n      const courses = coursesResponse.data.courses || [];\n      if (courses.length === 0) {\n        console.warn(\"No courses found for the logged-in account.\");\n        setEvents([]);\n        setGradesArray([]); // Reset grades array\n        setIsLoading(false);\n        return;\n      }\n      const allEvents = [];\n      const tempGradesArray = []; // Temporary array for assignments and grades\n\n      // Fetch coursework and grades\n      for (const course of courses) {\n        try {\n          const courseworkResponse = await axios.get(`https://classroom.googleapis.com/v1/courses/${course.id}/courseWork`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          const coursework = courseworkResponse.data.courseWork || [];\n          for (const assignment of coursework) {\n            const {\n              dueDate,\n              dueTime,\n              title,\n              id: assignmentId\n            } = assignment;\n\n            // Fetch student submission for the assignment\n            const submissionResponse = await axios.get(`https://classroom.googleapis.com/v1/courses/${course.id}/courseWork/${assignmentId}/studentSubmissions`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            const submissions = submissionResponse.data.studentSubmissions || [];\n            submissions.forEach(submission => {\n              const grade = (submission === null || submission === void 0 ? void 0 : submission.assignedGrade) || \"Not Graded\";\n              const studentId = (submission === null || submission === void 0 ? void 0 : submission.userId) || \"Unknown Student\";\n              tempGradesArray.push([title, studentId, grade]);\n            });\n\n            // Add assignment event\n            if (dueDate) {\n              const dueDateTime = new Date(dueDate.year, dueDate.month - 1, dueDate.day, (dueTime === null || dueTime === void 0 ? void 0 : dueTime.hours) || 23, (dueTime === null || dueTime === void 0 ? void 0 : dueTime.minutes) || 59);\n              allEvents.push({\n                title,\n                start: dueDateTime,\n                end: dueDateTime,\n                color: \"blue\" // Default color\n              });\n            } else {\n              allEvents.push({\n                title,\n                start: null,\n                end: null,\n                color: \"gray\"\n              });\n            }\n          }\n        } catch (error) {\n          console.error(`Error fetching assignments for course ID: ${course.id}`, error);\n        }\n      }\n\n      // Update state with events and grades\n      setEvents(allEvents);\n      setGradesArray(tempGradesArray);\n      console.log(\"Final Events:\", allEvents);\n      console.log(\"2D Grades Array:\", tempGradesArray);\n    } catch (error) {\n      console.error(\"Error fetching classroom data:\", error.response || error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Google Login\n  const login = useGoogleLogin({\n    onSuccess: response => {\n      console.log(\"Login Successful:\", response);\n      setToken(response.access_token);\n    },\n    onError: error => console.error(\"Login failed:\", error),\n    scope: \"https://www.googleapis.com/auth/classroom.courses.readonly https://www.googleapis.com/auth/classroom.coursework.me.readonly https://www.googleapis.com/auth/classroom.student-submissions.me.readonly\"\n  });\n\n  // Logout\n  const logout = () => {\n    console.log(\"Logging out...\");\n    setToken(null);\n    setEvents([]);\n    setGradesArray([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Classroom Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), !token ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ClassroomCalendar, {\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"2D Array of Assignments and Grades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          background: \"#f4f4f4\",\n          padding: \"10px\",\n          borderRadius: \"5px\",\n          overflowX: \"auto\"\n        },\n        children: JSON.stringify(gradesArray, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"scJXS8ZO2o/aCIhj+YbhBHIgf2A=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useGoogleLogin","axios","ClassroomCalendar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","token","setToken","events","setEvents","gradesArray","setGradesArray","isLoading","setIsLoading","fetchClassroomData","console","log","coursesResponse","get","headers","Authorization","data","courses","length","warn","allEvents","tempGradesArray","course","courseworkResponse","id","coursework","courseWork","assignment","dueDate","dueTime","title","assignmentId","submissionResponse","submissions","studentSubmissions","forEach","submission","grade","assignedGrade","studentId","userId","push","dueDateTime","Date","year","month","day","hours","minutes","start","end","color","error","response","login","onSuccess","access_token","onError","scope","logout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","background","padding","borderRadius","overflowX","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/jaredbryant/classroom-calendar/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useGoogleLogin } from \"@react-oauth/google\";\nimport axios from \"axios\";\nimport ClassroomCalendar from \"./ClassroomCalendar\";\n\nconst App = () => {\n  const [token, setToken] = useState(null); // OAuth token\n  const [events, setEvents] = useState([]);\n  const [gradesArray, setGradesArray] = useState([]); // 2D array of assignments and grades\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (token) {\n      fetchClassroomData(token);\n    }\n  }, [token]);\n\n  // Fetch Classroom Data\n  const fetchClassroomData = async (token) => {\n    setIsLoading(true);\n    try {\n      console.log(\"Fetching classroom data with token:\", token);\n\n      // Fetch courses\n      const coursesResponse = await axios.get(\n        \"https://classroom.googleapis.com/v1/courses\",\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(\"Fetched Courses:\", coursesResponse.data);\n\n      const courses = coursesResponse.data.courses || [];\n      if (courses.length === 0) {\n        console.warn(\"No courses found for the logged-in account.\");\n        setEvents([]);\n        setGradesArray([]); // Reset grades array\n        setIsLoading(false);\n        return;\n      }\n\n      const allEvents = [];\n      const tempGradesArray = []; // Temporary array for assignments and grades\n\n      // Fetch coursework and grades\n      for (const course of courses) {\n        try {\n          const courseworkResponse = await axios.get(\n            `https://classroom.googleapis.com/v1/courses/${course.id}/courseWork`,\n            {\n              headers: { Authorization: `Bearer ${token}` },\n            }\n          );\n\n          const coursework = courseworkResponse.data.courseWork || [];\n          for (const assignment of coursework) {\n            const { dueDate, dueTime, title, id: assignmentId } = assignment;\n\n            // Fetch student submission for the assignment\n            const submissionResponse = await axios.get(\n              `https://classroom.googleapis.com/v1/courses/${course.id}/courseWork/${assignmentId}/studentSubmissions`,\n              {\n                headers: { Authorization: `Bearer ${token}` },\n              }\n            );\n\n            const submissions = submissionResponse.data.studentSubmissions || [];\n            submissions.forEach((submission) => {\n              const grade = submission?.assignedGrade || \"Not Graded\";\n              const studentId = submission?.userId || \"Unknown Student\";\n              tempGradesArray.push([title, studentId, grade]);\n            });\n\n            // Add assignment event\n            if (dueDate) {\n              const dueDateTime = new Date(\n                dueDate.year,\n                dueDate.month - 1,\n                dueDate.day,\n                dueTime?.hours || 23,\n                dueTime?.minutes || 59\n              );\n\n              allEvents.push({\n                title,\n                start: dueDateTime,\n                end: dueDateTime,\n                color: \"blue\", // Default color\n              });\n            } else {\n              allEvents.push({\n                title,\n                start: null,\n                end: null,\n                color: \"gray\",\n              });\n            }\n          }\n        } catch (error) {\n          console.error(`Error fetching assignments for course ID: ${course.id}`, error);\n        }\n      }\n\n      // Update state with events and grades\n      setEvents(allEvents);\n      setGradesArray(tempGradesArray);\n      console.log(\"Final Events:\", allEvents);\n      console.log(\"2D Grades Array:\", tempGradesArray);\n    } catch (error) {\n      console.error(\"Error fetching classroom data:\", error.response || error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Google Login\n  const login = useGoogleLogin({\n    onSuccess: (response) => {\n      console.log(\"Login Successful:\", response);\n      setToken(response.access_token);\n    },\n    onError: (error) => console.error(\"Login failed:\", error),\n    scope: \"https://www.googleapis.com/auth/classroom.courses.readonly https://www.googleapis.com/auth/classroom.coursework.me.readonly https://www.googleapis.com/auth/classroom.student-submissions.me.readonly\",\n  });\n\n  // Logout\n  const logout = () => {\n    console.log(\"Logging out...\");\n    setToken(null);\n    setEvents([]);\n    setGradesArray([]);\n  };\n\n  return (\n    <div>\n      <h1>Classroom Calendar</h1>\n      {!token ? (\n        <>\n          <button onClick={login}>Login with Google</button>\n        </>\n      ) : isLoading ? (\n        <p>Loading data...</p>\n      ) : (\n        <>\n          <button onClick={logout}>Logout</button>\n          <h2>Your Assignments</h2>\n          <ClassroomCalendar events={events} />\n          <h3>2D Array of Assignments and Grades</h3>\n          <pre\n            style={{\n              background: \"#f4f4f4\",\n              padding: \"10px\",\n              borderRadius: \"5px\",\n              overflowX: \"auto\",\n            }}\n          >\n            {JSON.stringify(gradesArray, null, 2)}\n          </pre>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}