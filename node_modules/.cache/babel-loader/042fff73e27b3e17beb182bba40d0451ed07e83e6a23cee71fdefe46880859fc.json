{"ast":null,"code":"var _jsxFileName = \"/Users/jaredbryant/classroom-calendar/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useGoogleLogin } from \"@react-oauth/google\";\nimport axios from \"axios\"; // Import axios\nimport ClassroomCalendar from \"./ClassroomCalendar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const login = useGoogleLogin({\n    onSuccess: async tokenResponse => {\n      console.log(\"Login successful, token:\", tokenResponse);\n      const token = tokenResponse.access_token;\n      try {\n        const coursesResponse = await axios.get(\"https://classroom.googleapis.com/v1/courses\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Courses fetched:\", coursesResponse.data);\n        const courses = coursesResponse.data.courses || [];\n        const assignments = [];\n        for (const course of courses) {\n          try {\n            const courseworkResponse = await axios.get(`https://classroom.googleapis.com/v1/courses/${course.id}/courseWork`, {\n              headers: {\n                Authorization: `Bearer ${token}`\n              }\n            });\n            console.log(`Course ID: ${course.id}, Assignments:`, courseworkResponse.data);\n            const coursework = courseworkResponse.data.courseWork || [];\n            coursework.forEach(work => {\n              if (work.dueDate) {\n                var _work$dueTime, _work$dueTime2;\n                const {\n                  year,\n                  month,\n                  day\n                } = work.dueDate;\n                const hours = ((_work$dueTime = work.dueTime) === null || _work$dueTime === void 0 ? void 0 : _work$dueTime.hours) || 23;\n                const minutes = ((_work$dueTime2 = work.dueTime) === null || _work$dueTime2 === void 0 ? void 0 : _work$dueTime2.minutes) || 59;\n                const dueDate = new Date(year, month - 1, day, hours, minutes);\n                const studyDate = new Date(dueDate);\n                studyDate.setDate(dueDate.getDate() - 2);\n                assignments.push({\n                  title: `Study: ${work.title}`,\n                  start: studyDate,\n                  end: new Date(studyDate.getTime() + 60 * 60 * 1000)\n                });\n                assignments.push({\n                  title: work.title,\n                  start: dueDate,\n                  end: new Date(dueDate.getTime() + 30 * 60 * 1000)\n                });\n              }\n            });\n          } catch (error) {\n            console.error(`Error fetching coursework for course ID: ${course.id}`, error);\n          }\n        }\n        setEvents(assignments);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    onError: error => console.error(\"Login failed:\", error),\n    scope: \"https://www.googleapis.com/auth/classroom.courses.readonly https://www.googleapis.com/auth/classroom.coursework.me\"\n  });\n  const currentDate = new Date();\n  const overdueAssignments = events.filter(event => event.end < currentDate && !event.title.startsWith(\"Study:\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Classroom Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), !events.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => login(),\n        children: \"Login with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No events to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Overdue Assignments: \", overdueAssignments.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), overdueAssignments.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: overdueAssignments.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: assignment.title.replace(\"Overdue: \", \"\")\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ClassroomCalendar, {\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xq1/HoQHWkhDYyjk8mCpB6xd7X4=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useGoogleLogin","axios","ClassroomCalendar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","events","setEvents","login","onSuccess","tokenResponse","console","log","token","access_token","coursesResponse","get","headers","Authorization","data","courses","assignments","course","courseworkResponse","id","coursework","courseWork","forEach","work","dueDate","_work$dueTime","_work$dueTime2","year","month","day","hours","dueTime","minutes","Date","studyDate","setDate","getDate","push","title","start","end","getTime","error","onError","scope","currentDate","overdueAssignments","filter","event","startsWith","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","map","assignment","index","replace","_c","$RefreshReg$"],"sources":["/Users/jaredbryant/classroom-calendar/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useGoogleLogin } from \"@react-oauth/google\";\nimport axios from \"axios\"; // Import axios\nimport ClassroomCalendar from \"./ClassroomCalendar\";\n\nconst App = () => {\n  const [events, setEvents] = useState([]);\n\n  const login = useGoogleLogin({\n    onSuccess: async (tokenResponse) => {\n      console.log(\"Login successful, token:\", tokenResponse);\n\n      const token = tokenResponse.access_token;\n\n      try {\n        const coursesResponse = await axios.get(\n          \"https://classroom.googleapis.com/v1/courses\",\n          {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        console.log(\"Courses fetched:\", coursesResponse.data);\n        const courses = coursesResponse.data.courses || [];\n        const assignments = [];\n\n        for (const course of courses) {\n          try {\n            const courseworkResponse = await axios.get(\n              `https://classroom.googleapis.com/v1/courses/${course.id}/courseWork`,\n              {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              }\n            );\n\n            console.log(`Course ID: ${course.id}, Assignments:`, courseworkResponse.data);\n            const coursework = courseworkResponse.data.courseWork || [];\n\n            coursework.forEach((work) => {\n              if (work.dueDate) {\n                const { year, month, day } = work.dueDate;\n                const hours = work.dueTime?.hours || 23;\n                const minutes = work.dueTime?.minutes || 59;\n\n                const dueDate = new Date(year, month - 1, day, hours, minutes);\n                const studyDate = new Date(dueDate);\n                studyDate.setDate(dueDate.getDate() - 2);\n\n                assignments.push({\n                  title: `Study: ${work.title}`,\n                  start: studyDate,\n                  end: new Date(studyDate.getTime() + 60 * 60 * 1000),\n                });\n\n                assignments.push({\n                  title: work.title,\n                  start: dueDate,\n                  end: new Date(dueDate.getTime() + 30 * 60 * 1000),\n                });\n              }\n            });\n          } catch (error) {\n            console.error(`Error fetching coursework for course ID: ${course.id}`, error);\n          }\n        }\n\n        setEvents(assignments);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    onError: (error) => console.error(\"Login failed:\", error),\n    scope: \"https://www.googleapis.com/auth/classroom.courses.readonly https://www.googleapis.com/auth/classroom.coursework.me\",\n  });\n\n  const currentDate = new Date();\n  const overdueAssignments = events.filter((event) => event.end < currentDate && !event.title.startsWith(\"Study:\"));\n\n  return (\n    <div>\n      <h1>Classroom Calendar</h1>\n      {!events.length ? (\n        <>\n          <button onClick={() => login()}>Login with Google</button>\n          <p>No events to display</p>\n        </>\n      ) : (\n        <>\n          <h2>Overdue Assignments: {overdueAssignments.length}</h2>\n          {overdueAssignments.length > 0 && (\n            <ul>\n              {overdueAssignments.map((assignment, index) => (\n                <li key={index}>{assignment.title.replace(\"Overdue: \", \"\")}</li>\n              ))}\n            </ul>\n          )}\n          <ClassroomCalendar events={events} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}