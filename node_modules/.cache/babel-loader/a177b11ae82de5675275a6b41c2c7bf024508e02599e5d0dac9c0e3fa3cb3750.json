{"ast":null,"code":"var _jsxFileName = \"/Users/mannyfowler/Desktop/Hackathon/HackerHornets/CLASSROOM-CALENDAR/src/Gpt.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gpt = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [response, setResponse] = useState('');\n  const sendMessage = async () => {\n    try {\n      const apiUrl = 'https://api.openai.com/v1/chat/completions'; // Update with the correct API endpoint\n      const apiKey = 'YOUR_OPENAI_API_KEY'; // Replace with your actual API key\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`\n      };\n      const requestBody = {\n        messages: [{\n          role: 'user',\n          content: input\n        }]\n      };\n      const {\n        data\n      } = await axios.post(apiUrl, requestBody, {\n        headers\n      });\n      setResponse(data.choices[0].message.content);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Gpt, \"oaYRRcBGsk3XPMHoADjlvW3B+rc=\");\n_c = Gpt;\nexport default Gpt;\nvar _c;\n$RefreshReg$(_c, \"Gpt\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Gpt","_s","input","setInput","response","setResponse","sendMessage","apiUrl","apiKey","headers","requestBody","messages","role","content","data","post","choices","message","error","console","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mannyfowler/Desktop/Hackathon/HackerHornets/CLASSROOM-CALENDAR/src/Gpt.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Gpt = () => {\n  const [input, setInput] = useState('');\n  const [response, setResponse] = useState('');\n\n  const sendMessage = async () => {\n    try {\n      const apiUrl = 'https://api.openai.com/v1/chat/completions'; // Update with the correct API endpoint\n      const apiKey = 'YOUR_OPENAI_API_KEY'; // Replace with your actual API key\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`,\n      };\n\n      const requestBody = {\n        messages: [{ role: 'user', content: input }],\n      };\n\n      const { data } = await axios.post(apiUrl, requestBody, { headers });\n\n      setResponse(data.choices[0].message.content);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n      <div>\n        <p>{response}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Gpt;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,MAAM,GAAG,4CAA4C,CAAC,CAAC;MAC7D,MAAMC,MAAM,GAAG,qBAAqB,CAAC,CAAC;MACtC,MAAMC,OAAO,GAAG;QACd,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUD,MAAM;MACnC,CAAC;MAED,MAAME,WAAW,GAAG;QAClBC,QAAQ,EAAE,CAAC;UAAEC,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAEX;QAAM,CAAC;MAC7C,CAAC;MAED,MAAM;QAAEY;MAAK,CAAC,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAACR,MAAM,EAAEG,WAAW,EAAE;QAAED;MAAQ,CAAC,CAAC;MAEnEJ,WAAW,CAACS,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACJ,OAAO,CAAC;IAC9C,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpB,KAAM;QACbqB,QAAQ,EAAGC,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACF9B,OAAA;QAAQ+B,OAAO,EAAExB,WAAY;QAAAc,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACN9B,OAAA;MAAAqB,QAAA,eACErB,OAAA;QAAAqB,QAAA,EAAIhB;MAAQ;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAxCID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA0CT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}